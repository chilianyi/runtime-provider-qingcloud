// Code generated by protoc-gen-go. DO NOT EDIT.
// source: runtime_provider.proto

package pb

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ParseClusterConfRequest struct {
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	VersionId            *wrappers.StringValue `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	Conf                 *wrappers.StringValue `protobuf:"bytes,3,opt,name=conf,proto3" json:"conf,omitempty"`
	Cluster              *Cluster              `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ParseClusterConfRequest) Reset()         { *m = ParseClusterConfRequest{} }
func (m *ParseClusterConfRequest) String() string { return proto.CompactTextString(m) }
func (*ParseClusterConfRequest) ProtoMessage()    {}
func (*ParseClusterConfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{0}
}

func (m *ParseClusterConfRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseClusterConfRequest.Unmarshal(m, b)
}
func (m *ParseClusterConfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseClusterConfRequest.Marshal(b, m, deterministic)
}
func (m *ParseClusterConfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseClusterConfRequest.Merge(m, src)
}
func (m *ParseClusterConfRequest) XXX_Size() int {
	return xxx_messageInfo_ParseClusterConfRequest.Size(m)
}
func (m *ParseClusterConfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseClusterConfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ParseClusterConfRequest proto.InternalMessageInfo

func (m *ParseClusterConfRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *ParseClusterConfRequest) GetVersionId() *wrappers.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *ParseClusterConfRequest) GetConf() *wrappers.StringValue {
	if m != nil {
		return m.Conf
	}
	return nil
}

func (m *ParseClusterConfRequest) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type ParseClusterConfResponse struct {
	Cluster              *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParseClusterConfResponse) Reset()         { *m = ParseClusterConfResponse{} }
func (m *ParseClusterConfResponse) String() string { return proto.CompactTextString(m) }
func (*ParseClusterConfResponse) ProtoMessage()    {}
func (*ParseClusterConfResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{1}
}

func (m *ParseClusterConfResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseClusterConfResponse.Unmarshal(m, b)
}
func (m *ParseClusterConfResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseClusterConfResponse.Marshal(b, m, deterministic)
}
func (m *ParseClusterConfResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseClusterConfResponse.Merge(m, src)
}
func (m *ParseClusterConfResponse) XXX_Size() int {
	return xxx_messageInfo_ParseClusterConfResponse.Size(m)
}
func (m *ParseClusterConfResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseClusterConfResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ParseClusterConfResponse proto.InternalMessageInfo

func (m *ParseClusterConfResponse) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type SplitJobIntoTasksRequest struct {
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Job                  *Job                  `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SplitJobIntoTasksRequest) Reset()         { *m = SplitJobIntoTasksRequest{} }
func (m *SplitJobIntoTasksRequest) String() string { return proto.CompactTextString(m) }
func (*SplitJobIntoTasksRequest) ProtoMessage()    {}
func (*SplitJobIntoTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{2}
}

func (m *SplitJobIntoTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SplitJobIntoTasksRequest.Unmarshal(m, b)
}
func (m *SplitJobIntoTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SplitJobIntoTasksRequest.Marshal(b, m, deterministic)
}
func (m *SplitJobIntoTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SplitJobIntoTasksRequest.Merge(m, src)
}
func (m *SplitJobIntoTasksRequest) XXX_Size() int {
	return xxx_messageInfo_SplitJobIntoTasksRequest.Size(m)
}
func (m *SplitJobIntoTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SplitJobIntoTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SplitJobIntoTasksRequest proto.InternalMessageInfo

func (m *SplitJobIntoTasksRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *SplitJobIntoTasksRequest) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type SplitJobIntoTasksResponse struct {
	TaskLayer            *TaskLayer `protobuf:"bytes,1,opt,name=taskLayer,proto3" json:"taskLayer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SplitJobIntoTasksResponse) Reset()         { *m = SplitJobIntoTasksResponse{} }
func (m *SplitJobIntoTasksResponse) String() string { return proto.CompactTextString(m) }
func (*SplitJobIntoTasksResponse) ProtoMessage()    {}
func (*SplitJobIntoTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{3}
}

func (m *SplitJobIntoTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SplitJobIntoTasksResponse.Unmarshal(m, b)
}
func (m *SplitJobIntoTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SplitJobIntoTasksResponse.Marshal(b, m, deterministic)
}
func (m *SplitJobIntoTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SplitJobIntoTasksResponse.Merge(m, src)
}
func (m *SplitJobIntoTasksResponse) XXX_Size() int {
	return xxx_messageInfo_SplitJobIntoTasksResponse.Size(m)
}
func (m *SplitJobIntoTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SplitJobIntoTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SplitJobIntoTasksResponse proto.InternalMessageInfo

func (m *SplitJobIntoTasksResponse) GetTaskLayer() *TaskLayer {
	if m != nil {
		return m.TaskLayer
	}
	return nil
}

type HandleSubtaskRequest struct {
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Task                 *Task                 `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HandleSubtaskRequest) Reset()         { *m = HandleSubtaskRequest{} }
func (m *HandleSubtaskRequest) String() string { return proto.CompactTextString(m) }
func (*HandleSubtaskRequest) ProtoMessage()    {}
func (*HandleSubtaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{4}
}

func (m *HandleSubtaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleSubtaskRequest.Unmarshal(m, b)
}
func (m *HandleSubtaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleSubtaskRequest.Marshal(b, m, deterministic)
}
func (m *HandleSubtaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleSubtaskRequest.Merge(m, src)
}
func (m *HandleSubtaskRequest) XXX_Size() int {
	return xxx_messageInfo_HandleSubtaskRequest.Size(m)
}
func (m *HandleSubtaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleSubtaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandleSubtaskRequest proto.InternalMessageInfo

func (m *HandleSubtaskRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *HandleSubtaskRequest) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type HandleSubtaskResponse struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandleSubtaskResponse) Reset()         { *m = HandleSubtaskResponse{} }
func (m *HandleSubtaskResponse) String() string { return proto.CompactTextString(m) }
func (*HandleSubtaskResponse) ProtoMessage()    {}
func (*HandleSubtaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{5}
}

func (m *HandleSubtaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleSubtaskResponse.Unmarshal(m, b)
}
func (m *HandleSubtaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleSubtaskResponse.Marshal(b, m, deterministic)
}
func (m *HandleSubtaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleSubtaskResponse.Merge(m, src)
}
func (m *HandleSubtaskResponse) XXX_Size() int {
	return xxx_messageInfo_HandleSubtaskResponse.Size(m)
}
func (m *HandleSubtaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleSubtaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HandleSubtaskResponse proto.InternalMessageInfo

func (m *HandleSubtaskResponse) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type WaitSubtaskRequest struct {
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Task                 *Task                 `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WaitSubtaskRequest) Reset()         { *m = WaitSubtaskRequest{} }
func (m *WaitSubtaskRequest) String() string { return proto.CompactTextString(m) }
func (*WaitSubtaskRequest) ProtoMessage()    {}
func (*WaitSubtaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{6}
}

func (m *WaitSubtaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitSubtaskRequest.Unmarshal(m, b)
}
func (m *WaitSubtaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitSubtaskRequest.Marshal(b, m, deterministic)
}
func (m *WaitSubtaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitSubtaskRequest.Merge(m, src)
}
func (m *WaitSubtaskRequest) XXX_Size() int {
	return xxx_messageInfo_WaitSubtaskRequest.Size(m)
}
func (m *WaitSubtaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitSubtaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WaitSubtaskRequest proto.InternalMessageInfo

func (m *WaitSubtaskRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *WaitSubtaskRequest) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type WaitSubtaskResponse struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitSubtaskResponse) Reset()         { *m = WaitSubtaskResponse{} }
func (m *WaitSubtaskResponse) String() string { return proto.CompactTextString(m) }
func (*WaitSubtaskResponse) ProtoMessage()    {}
func (*WaitSubtaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{7}
}

func (m *WaitSubtaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitSubtaskResponse.Unmarshal(m, b)
}
func (m *WaitSubtaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitSubtaskResponse.Marshal(b, m, deterministic)
}
func (m *WaitSubtaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitSubtaskResponse.Merge(m, src)
}
func (m *WaitSubtaskResponse) XXX_Size() int {
	return xxx_messageInfo_WaitSubtaskResponse.Size(m)
}
func (m *WaitSubtaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitSubtaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WaitSubtaskResponse proto.InternalMessageInfo

func (m *WaitSubtaskResponse) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type CheckResourceRequest struct {
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Cluster              *Cluster              `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CheckResourceRequest) Reset()         { *m = CheckResourceRequest{} }
func (m *CheckResourceRequest) String() string { return proto.CompactTextString(m) }
func (*CheckResourceRequest) ProtoMessage()    {}
func (*CheckResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{8}
}

func (m *CheckResourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResourceRequest.Unmarshal(m, b)
}
func (m *CheckResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResourceRequest.Marshal(b, m, deterministic)
}
func (m *CheckResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResourceRequest.Merge(m, src)
}
func (m *CheckResourceRequest) XXX_Size() int {
	return xxx_messageInfo_CheckResourceRequest.Size(m)
}
func (m *CheckResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResourceRequest proto.InternalMessageInfo

func (m *CheckResourceRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *CheckResourceRequest) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type CheckResourceResponse struct {
	Ok                   *wrappers.BoolValue `protobuf:"bytes,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CheckResourceResponse) Reset()         { *m = CheckResourceResponse{} }
func (m *CheckResourceResponse) String() string { return proto.CompactTextString(m) }
func (*CheckResourceResponse) ProtoMessage()    {}
func (*CheckResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{9}
}

func (m *CheckResourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResourceResponse.Unmarshal(m, b)
}
func (m *CheckResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResourceResponse.Marshal(b, m, deterministic)
}
func (m *CheckResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResourceResponse.Merge(m, src)
}
func (m *CheckResourceResponse) XXX_Size() int {
	return xxx_messageInfo_CheckResourceResponse.Size(m)
}
func (m *CheckResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResourceResponse proto.InternalMessageInfo

func (m *CheckResourceResponse) GetOk() *wrappers.BoolValue {
	if m != nil {
		return m.Ok
	}
	return nil
}

type DescribeVpcRequest struct {
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	VpcId                *wrappers.StringValue `protobuf:"bytes,2,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DescribeVpcRequest) Reset()         { *m = DescribeVpcRequest{} }
func (m *DescribeVpcRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeVpcRequest) ProtoMessage()    {}
func (*DescribeVpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{10}
}

func (m *DescribeVpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeVpcRequest.Unmarshal(m, b)
}
func (m *DescribeVpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeVpcRequest.Marshal(b, m, deterministic)
}
func (m *DescribeVpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeVpcRequest.Merge(m, src)
}
func (m *DescribeVpcRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeVpcRequest.Size(m)
}
func (m *DescribeVpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeVpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeVpcRequest proto.InternalMessageInfo

func (m *DescribeVpcRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *DescribeVpcRequest) GetVpcId() *wrappers.StringValue {
	if m != nil {
		return m.VpcId
	}
	return nil
}

type Eip struct {
	EipId                *wrappers.StringValue `protobuf:"bytes,1,opt,name=eip_id,json=eipId,proto3" json:"eip_id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Addr                 *wrappers.StringValue `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Eip) Reset()         { *m = Eip{} }
func (m *Eip) String() string { return proto.CompactTextString(m) }
func (*Eip) ProtoMessage()    {}
func (*Eip) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{11}
}

func (m *Eip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Eip.Unmarshal(m, b)
}
func (m *Eip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Eip.Marshal(b, m, deterministic)
}
func (m *Eip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Eip.Merge(m, src)
}
func (m *Eip) XXX_Size() int {
	return xxx_messageInfo_Eip.Size(m)
}
func (m *Eip) XXX_DiscardUnknown() {
	xxx_messageInfo_Eip.DiscardUnknown(m)
}

var xxx_messageInfo_Eip proto.InternalMessageInfo

func (m *Eip) GetEipId() *wrappers.StringValue {
	if m != nil {
		return m.EipId
	}
	return nil
}

func (m *Eip) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Eip) GetAddr() *wrappers.StringValue {
	if m != nil {
		return m.Addr
	}
	return nil
}

type Vpc struct {
	VpcId                *wrappers.StringValue `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Status               *wrappers.StringValue `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	TransitionStatus     *wrappers.StringValue `protobuf:"bytes,6,opt,name=transition_status,json=transitionStatus,proto3" json:"transition_status,omitempty"`
	Subnets              []string              `protobuf:"bytes,7,rep,name=subnets,proto3" json:"subnets,omitempty"`
	Eip                  *Eip                  `protobuf:"bytes,8,opt,name=eip,proto3" json:"eip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Vpc) Reset()         { *m = Vpc{} }
func (m *Vpc) String() string { return proto.CompactTextString(m) }
func (*Vpc) ProtoMessage()    {}
func (*Vpc) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{12}
}

func (m *Vpc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vpc.Unmarshal(m, b)
}
func (m *Vpc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vpc.Marshal(b, m, deterministic)
}
func (m *Vpc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vpc.Merge(m, src)
}
func (m *Vpc) XXX_Size() int {
	return xxx_messageInfo_Vpc.Size(m)
}
func (m *Vpc) XXX_DiscardUnknown() {
	xxx_messageInfo_Vpc.DiscardUnknown(m)
}

var xxx_messageInfo_Vpc proto.InternalMessageInfo

func (m *Vpc) GetVpcId() *wrappers.StringValue {
	if m != nil {
		return m.VpcId
	}
	return nil
}

func (m *Vpc) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Vpc) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Vpc) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Vpc) GetStatus() *wrappers.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Vpc) GetTransitionStatus() *wrappers.StringValue {
	if m != nil {
		return m.TransitionStatus
	}
	return nil
}

func (m *Vpc) GetSubnets() []string {
	if m != nil {
		return m.Subnets
	}
	return nil
}

func (m *Vpc) GetEip() *Eip {
	if m != nil {
		return m.Eip
	}
	return nil
}

type DescribeVpcResponse struct {
	Vpc                  *Vpc     `protobuf:"bytes,1,opt,name=vpc,proto3" json:"vpc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DescribeVpcResponse) Reset()         { *m = DescribeVpcResponse{} }
func (m *DescribeVpcResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeVpcResponse) ProtoMessage()    {}
func (*DescribeVpcResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{13}
}

func (m *DescribeVpcResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeVpcResponse.Unmarshal(m, b)
}
func (m *DescribeVpcResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeVpcResponse.Marshal(b, m, deterministic)
}
func (m *DescribeVpcResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeVpcResponse.Merge(m, src)
}
func (m *DescribeVpcResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeVpcResponse.Size(m)
}
func (m *DescribeVpcResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeVpcResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeVpcResponse proto.InternalMessageInfo

func (m *DescribeVpcResponse) GetVpc() *Vpc {
	if m != nil {
		return m.Vpc
	}
	return nil
}

type DescribeClusterDetailsRequest struct {
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Cluster              *Cluster              `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DescribeClusterDetailsRequest) Reset()         { *m = DescribeClusterDetailsRequest{} }
func (m *DescribeClusterDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeClusterDetailsRequest) ProtoMessage()    {}
func (*DescribeClusterDetailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{14}
}

func (m *DescribeClusterDetailsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeClusterDetailsRequest.Unmarshal(m, b)
}
func (m *DescribeClusterDetailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeClusterDetailsRequest.Marshal(b, m, deterministic)
}
func (m *DescribeClusterDetailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeClusterDetailsRequest.Merge(m, src)
}
func (m *DescribeClusterDetailsRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeClusterDetailsRequest.Size(m)
}
func (m *DescribeClusterDetailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeClusterDetailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeClusterDetailsRequest proto.InternalMessageInfo

func (m *DescribeClusterDetailsRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *DescribeClusterDetailsRequest) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type DescribeClusterDetailsResponse struct {
	Cluster              *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DescribeClusterDetailsResponse) Reset()         { *m = DescribeClusterDetailsResponse{} }
func (m *DescribeClusterDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeClusterDetailsResponse) ProtoMessage()    {}
func (*DescribeClusterDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{15}
}

func (m *DescribeClusterDetailsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeClusterDetailsResponse.Unmarshal(m, b)
}
func (m *DescribeClusterDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeClusterDetailsResponse.Marshal(b, m, deterministic)
}
func (m *DescribeClusterDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeClusterDetailsResponse.Merge(m, src)
}
func (m *DescribeClusterDetailsResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeClusterDetailsResponse.Size(m)
}
func (m *DescribeClusterDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeClusterDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeClusterDetailsResponse proto.InternalMessageInfo

func (m *DescribeClusterDetailsResponse) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type ValidateRuntimeRequest struct {
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Zone                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	RuntimeCredential    *RuntimeCredential    `protobuf:"bytes,3,opt,name=runtime_credential,json=runtimeCredential,proto3" json:"runtime_credential,omitempty"`
	NeedCreate           *wrappers.BoolValue   `protobuf:"bytes,4,opt,name=need_create,json=needCreate,proto3" json:"need_create,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ValidateRuntimeRequest) Reset()         { *m = ValidateRuntimeRequest{} }
func (m *ValidateRuntimeRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateRuntimeRequest) ProtoMessage()    {}
func (*ValidateRuntimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{16}
}

func (m *ValidateRuntimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateRuntimeRequest.Unmarshal(m, b)
}
func (m *ValidateRuntimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateRuntimeRequest.Marshal(b, m, deterministic)
}
func (m *ValidateRuntimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateRuntimeRequest.Merge(m, src)
}
func (m *ValidateRuntimeRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateRuntimeRequest.Size(m)
}
func (m *ValidateRuntimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateRuntimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateRuntimeRequest proto.InternalMessageInfo

func (m *ValidateRuntimeRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *ValidateRuntimeRequest) GetZone() *wrappers.StringValue {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *ValidateRuntimeRequest) GetRuntimeCredential() *RuntimeCredential {
	if m != nil {
		return m.RuntimeCredential
	}
	return nil
}

func (m *ValidateRuntimeRequest) GetNeedCreate() *wrappers.BoolValue {
	if m != nil {
		return m.NeedCreate
	}
	return nil
}

type ValidateRuntimeResponse struct {
	Ok                   *wrappers.BoolValue `protobuf:"bytes,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ValidateRuntimeResponse) Reset()         { *m = ValidateRuntimeResponse{} }
func (m *ValidateRuntimeResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateRuntimeResponse) ProtoMessage()    {}
func (*ValidateRuntimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{17}
}

func (m *ValidateRuntimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateRuntimeResponse.Unmarshal(m, b)
}
func (m *ValidateRuntimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateRuntimeResponse.Marshal(b, m, deterministic)
}
func (m *ValidateRuntimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateRuntimeResponse.Merge(m, src)
}
func (m *ValidateRuntimeResponse) XXX_Size() int {
	return xxx_messageInfo_ValidateRuntimeResponse.Size(m)
}
func (m *ValidateRuntimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateRuntimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateRuntimeResponse proto.InternalMessageInfo

func (m *ValidateRuntimeResponse) GetOk() *wrappers.BoolValue {
	if m != nil {
		return m.Ok
	}
	return nil
}

type DescribeZonesRequest struct {
	Provider             *wrappers.StringValue `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	RuntimeCredential    *RuntimeCredential    `protobuf:"bytes,2,opt,name=runtime_credential,json=runtimeCredential,proto3" json:"runtime_credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DescribeZonesRequest) Reset()         { *m = DescribeZonesRequest{} }
func (m *DescribeZonesRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeZonesRequest) ProtoMessage()    {}
func (*DescribeZonesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{18}
}

func (m *DescribeZonesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeZonesRequest.Unmarshal(m, b)
}
func (m *DescribeZonesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeZonesRequest.Marshal(b, m, deterministic)
}
func (m *DescribeZonesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeZonesRequest.Merge(m, src)
}
func (m *DescribeZonesRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeZonesRequest.Size(m)
}
func (m *DescribeZonesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeZonesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeZonesRequest proto.InternalMessageInfo

func (m *DescribeZonesRequest) GetProvider() *wrappers.StringValue {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *DescribeZonesRequest) GetRuntimeCredential() *RuntimeCredential {
	if m != nil {
		return m.RuntimeCredential
	}
	return nil
}

type DescribeZonesResponse struct {
	Zones                []string `protobuf:"bytes,1,rep,name=zones,proto3" json:"zones,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DescribeZonesResponse) Reset()         { *m = DescribeZonesResponse{} }
func (m *DescribeZonesResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeZonesResponse) ProtoMessage()    {}
func (*DescribeZonesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{19}
}

func (m *DescribeZonesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeZonesResponse.Unmarshal(m, b)
}
func (m *DescribeZonesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeZonesResponse.Marshal(b, m, deterministic)
}
func (m *DescribeZonesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeZonesResponse.Merge(m, src)
}
func (m *DescribeZonesResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeZonesResponse.Size(m)
}
func (m *DescribeZonesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeZonesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeZonesResponse proto.InternalMessageInfo

func (m *DescribeZonesResponse) GetZones() []string {
	if m != nil {
		return m.Zones
	}
	return nil
}

func init() {
	proto.RegisterType((*ParseClusterConfRequest)(nil), "openpitrix.ParseClusterConfRequest")
	proto.RegisterType((*ParseClusterConfResponse)(nil), "openpitrix.ParseClusterConfResponse")
	proto.RegisterType((*SplitJobIntoTasksRequest)(nil), "openpitrix.SplitJobIntoTasksRequest")
	proto.RegisterType((*SplitJobIntoTasksResponse)(nil), "openpitrix.SplitJobIntoTasksResponse")
	proto.RegisterType((*HandleSubtaskRequest)(nil), "openpitrix.HandleSubtaskRequest")
	proto.RegisterType((*HandleSubtaskResponse)(nil), "openpitrix.HandleSubtaskResponse")
	proto.RegisterType((*WaitSubtaskRequest)(nil), "openpitrix.WaitSubtaskRequest")
	proto.RegisterType((*WaitSubtaskResponse)(nil), "openpitrix.WaitSubtaskResponse")
	proto.RegisterType((*CheckResourceRequest)(nil), "openpitrix.CheckResourceRequest")
	proto.RegisterType((*CheckResourceResponse)(nil), "openpitrix.CheckResourceResponse")
	proto.RegisterType((*DescribeVpcRequest)(nil), "openpitrix.DescribeVpcRequest")
	proto.RegisterType((*Eip)(nil), "openpitrix.Eip")
	proto.RegisterType((*Vpc)(nil), "openpitrix.Vpc")
	proto.RegisterType((*DescribeVpcResponse)(nil), "openpitrix.DescribeVpcResponse")
	proto.RegisterType((*DescribeClusterDetailsRequest)(nil), "openpitrix.DescribeClusterDetailsRequest")
	proto.RegisterType((*DescribeClusterDetailsResponse)(nil), "openpitrix.DescribeClusterDetailsResponse")
	proto.RegisterType((*ValidateRuntimeRequest)(nil), "openpitrix.ValidateRuntimeRequest")
	proto.RegisterType((*ValidateRuntimeResponse)(nil), "openpitrix.ValidateRuntimeResponse")
	proto.RegisterType((*DescribeZonesRequest)(nil), "openpitrix.DescribeZonesRequest")
	proto.RegisterType((*DescribeZonesResponse)(nil), "openpitrix.DescribeZonesResponse")
}

func init() { proto.RegisterFile("runtime_provider.proto", fileDescriptor_2998074df425fa49) }

var fileDescriptor_2998074df425fa49 = []byte{
	// 1004 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0x4d, 0x6f, 0xdb, 0x36,
	0x18, 0x86, 0xec, 0x7c, 0x34, 0xaf, 0x11, 0x34, 0x51, 0x3e, 0xaa, 0x19, 0x6d, 0x9a, 0xa8, 0x1d,
	0xd0, 0x15, 0x8b, 0x53, 0x34, 0x3b, 0x14, 0x08, 0xb6, 0x43, 0xdd, 0x00, 0x73, 0xd1, 0x75, 0x81,
	0x6c, 0x64, 0x40, 0x80, 0x21, 0xa3, 0x24, 0xc6, 0x63, 0xa3, 0x90, 0x1c, 0x49, 0x39, 0x6b, 0x8f,
	0x3b, 0xec, 0xb2, 0xdb, 0x7e, 0x40, 0x4f, 0x03, 0xf6, 0x07, 0xf7, 0x03, 0x06, 0x4a, 0x54, 0x2c,
	0xc9, 0xb2, 0xa7, 0x05, 0xc6, 0x76, 0xb2, 0x25, 0x3e, 0xcf, 0xfb, 0xf1, 0x90, 0x7c, 0xf4, 0xc2,
	0xb6, 0x88, 0xa9, 0x22, 0x57, 0xf8, 0x9c, 0x0b, 0x36, 0x22, 0x21, 0x16, 0x1d, 0x2e, 0x98, 0x62,
	0x36, 0x30, 0x8e, 0x29, 0x27, 0x4a, 0x90, 0x9f, 0xdb, 0x3b, 0x43, 0xc6, 0x86, 0x11, 0x3e, 0x48,
	0x56, 0xfc, 0xf8, 0xe2, 0xe0, 0x5a, 0x20, 0xce, 0xb1, 0x90, 0x29, 0xb6, 0xfd, 0xb0, 0xbc, 0xae,
	0x03, 0x4a, 0x85, 0xae, 0xb8, 0x01, 0xdc, 0x37, 0x00, 0xc4, 0xc9, 0x01, 0xa2, 0x94, 0x29, 0xa4,
	0x08, 0xa3, 0x19, 0xfd, 0xf3, 0xe4, 0x27, 0xd8, 0x1f, 0x62, 0xba, 0x2f, 0xaf, 0xd1, 0x70, 0x88,
	0xc5, 0x01, 0xe3, 0x09, 0xa2, 0x02, 0xbd, 0x1a, 0x44, 0xb1, 0x54, 0x59, 0x9d, 0xed, 0x55, 0x53,
	0xbf, 0x79, 0x5c, 0x79, 0xc7, 0x7c, 0xf3, 0x17, 0x14, 0x92, 0x97, 0xe9, 0x7f, 0xf7, 0x2f, 0x0b,
	0xee, 0x9d, 0x20, 0x21, 0x71, 0x37, 0x25, 0x77, 0x19, 0xbd, 0xf0, 0xf0, 0x4f, 0x31, 0x96, 0xca,
	0x3e, 0x02, 0xc8, 0x34, 0x20, 0xa1, 0x63, 0xed, 0x5a, 0x4f, 0x5a, 0xcf, 0xef, 0x77, 0xd2, 0x8a,
	0x3b, 0x59, 0x4b, 0x9d, 0xbe, 0x12, 0x84, 0x0e, 0x4f, 0x51, 0x14, 0x63, 0x6f, 0xc5, 0xe0, 0x7b,
	0xa1, 0x26, 0x8f, 0xb0, 0x90, 0x84, 0x51, 0x4d, 0x6e, 0xd4, 0x21, 0x1b, 0x7c, 0x2f, 0xb4, 0x9f,
	0xc1, 0x42, 0xc0, 0xe8, 0x85, 0xd3, 0xac, 0x41, 0x4b, 0x90, 0xf6, 0x3e, 0x2c, 0x9b, 0xf6, 0x9d,
	0x85, 0x84, 0xb4, 0xd1, 0x19, 0xef, 0x53, 0xc7, 0x34, 0xe7, 0x65, 0x18, 0xb7, 0x07, 0xce, 0x64,
	0xd7, 0x92, 0x33, 0x2a, 0x71, 0x3e, 0x94, 0x55, 0x23, 0xd4, 0x07, 0x70, 0xfa, 0x3c, 0x22, 0xea,
	0x35, 0xf3, 0x7b, 0x54, 0xb1, 0x01, 0x92, 0x97, 0x72, 0x2e, 0x0a, 0xee, 0x41, 0xf3, 0x1d, 0xf3,
	0x8d, 0x74, 0x77, 0xf3, 0x35, 0xbc, 0x66, 0xbe, 0xa7, 0xd7, 0xdc, 0x13, 0xf8, 0xa4, 0x22, 0xb7,
	0xe9, 0xe3, 0x10, 0x56, 0xf4, 0x46, 0xbf, 0x41, 0xef, 0x6f, 0x3a, 0xd9, 0xca, 0x47, 0x19, 0x64,
	0x8b, 0xde, 0x18, 0xe7, 0xbe, 0x87, 0xcd, 0xaf, 0x11, 0x0d, 0x23, 0xdc, 0x8f, 0x7d, 0xfd, 0x76,
	0x2e, 0x9d, 0x3c, 0x86, 0x05, 0x1d, 0xcb, 0xb4, 0xb2, 0x56, 0x2e, 0xc2, 0x4b, 0x56, 0xdd, 0x2f,
	0x61, 0xab, 0x94, 0xda, 0x34, 0x92, 0xd1, 0xad, 0x99, 0xf4, 0x6b, 0xb0, 0xbf, 0x43, 0x44, 0xfd,
	0xf7, 0x75, 0x1f, 0xc1, 0x46, 0x21, 0xf1, 0xbf, 0xaa, 0xfa, 0x17, 0x0b, 0x36, 0xbb, 0x3f, 0xe2,
	0x40, 0xf3, 0x58, 0x2c, 0x02, 0x3c, 0x97, 0xc2, 0x73, 0x47, 0xb8, 0x51, 0xe3, 0x08, 0x77, 0x61,
	0xab, 0x54, 0x83, 0xe9, 0xe1, 0x29, 0x34, 0x58, 0xd6, 0x41, 0x7b, 0x22, 0xf9, 0x4b, 0xc6, 0xa2,
	0x34, 0x75, 0x83, 0x5d, 0xba, 0xbf, 0x5a, 0x60, 0xbf, 0xc2, 0x32, 0x10, 0xc4, 0xc7, 0xa7, 0x3c,
	0x98, 0x4b, 0x1f, 0x87, 0xb0, 0x34, 0xe2, 0x41, 0x5d, 0x03, 0x59, 0x1c, 0xf1, 0xa0, 0x17, 0xba,
	0x1f, 0x2d, 0x68, 0x1e, 0x13, 0xae, 0xc9, 0x98, 0xf0, 0xba, 0x59, 0x17, 0x31, 0xe1, 0xa9, 0xf3,
	0x50, 0x74, 0x85, 0x6b, 0xe5, 0x4b, 0x90, 0x9a, 0x81, 0xc2, 0x50, 0xd4, 0xf3, 0x2a, 0x8d, 0x74,
	0xff, 0x6c, 0x42, 0xf3, 0x94, 0x07, 0xb9, 0xee, 0xac, 0xda, 0xdd, 0xdd, 0xa2, 0xc0, 0x23, 0x68,
	0x05, 0x02, 0x23, 0x85, 0xcf, 0xb5, 0xaa, 0xa6, 0xce, 0xc9, 0xdd, 0x1c, 0x64, 0x9f, 0x26, 0x0f,
	0x52, 0xb8, 0x7e, 0x61, 0x7f, 0x05, 0xad, 0x30, 0xd9, 0xd4, 0xe4, 0xb3, 0x63, 0xbc, 0x75, 0x76,
	0xd6, 0x3c, 0xc1, 0xfe, 0x02, 0x96, 0xa4, 0x42, 0x2a, 0x96, 0xce, 0x62, 0x0d, 0xaa, 0xc1, 0xda,
	0x3d, 0x58, 0x57, 0x02, 0x51, 0x49, 0x74, 0x8c, 0x73, 0x13, 0x60, 0xa9, 0x46, 0x80, 0xb5, 0x31,
	0xad, 0x9f, 0x86, 0x72, 0x60, 0x59, 0xc6, 0x3e, 0xc5, 0x4a, 0x3a, 0xcb, 0xbb, 0xcd, 0x27, 0x2b,
	0x5e, 0xf6, 0xa8, 0xfd, 0x15, 0x13, 0xee, 0xdc, 0x99, 0xf4, 0xd7, 0x63, 0xc2, 0x3d, 0xbd, 0xe6,
	0xbe, 0x80, 0x8d, 0xc2, 0x91, 0x36, 0xd7, 0x62, 0x0f, 0x9a, 0x23, 0x1e, 0x98, 0x5d, 0x2b, 0x30,
	0x35, 0x4a, 0xaf, 0xb9, 0xbf, 0x59, 0xf0, 0x20, 0xa3, 0x9a, 0xfb, 0xf6, 0x0a, 0x2b, 0x44, 0x22,
	0xf9, 0x7f, 0x5c, 0xf0, 0x6f, 0x61, 0x67, 0x5a, 0x31, 0xb7, 0xfb, 0xe8, 0xfd, 0xde, 0x80, 0xed,
	0x53, 0x14, 0x91, 0x10, 0x29, 0xec, 0xa5, 0x55, 0xcd, 0xa5, 0xaf, 0x67, 0xb0, 0xf0, 0x81, 0xd1,
	0x9a, 0xa7, 0x5b, 0x23, 0xed, 0x37, 0x60, 0x67, 0xe9, 0x02, 0x81, 0x43, 0x4c, 0x15, 0x41, 0x91,
	0x39, 0xe4, 0x0f, 0xf2, 0x3d, 0x98, 0x32, 0xbb, 0x37, 0x20, 0x6f, 0x5d, 0x94, 0x5f, 0xe9, 0xbb,
	0x42, 0x31, 0x0e, 0xcf, 0xd3, 0x1b, 0x60, 0x8e, 0xfb, 0x2c, 0xe7, 0x03, 0x0d, 0xef, 0x26, 0x68,
	0xf7, 0x18, 0xee, 0x4d, 0x68, 0x72, 0x0b, 0x23, 0xfd, 0x68, 0xc1, 0x66, 0xb6, 0x5b, 0x67, 0x8c,
	0xe2, 0x9b, 0x13, 0xf3, 0x02, 0xee, 0x64, 0xb3, 0x68, 0x2d, 0x5d, 0x6f, 0xd0, 0x53, 0x44, 0x6a,
	0xdc, 0x4e, 0x24, 0x77, 0x1f, 0xb6, 0x4a, 0xf5, 0x99, 0x2e, 0x37, 0x61, 0x51, 0xef, 0x89, 0x74,
	0xac, 0xe4, 0xa6, 0xa5, 0x0f, 0xcf, 0xff, 0x58, 0x86, 0x6d, 0x13, 0xf7, 0xc4, 0x14, 0xf4, 0x0d,
	0xa2, 0x68, 0x88, 0x85, 0xfd, 0x3d, 0xac, 0x95, 0xc7, 0x30, 0xfb, 0x51, 0xbe, 0x9e, 0x29, 0xa3,
	0x69, 0xfb, 0xf1, 0x6c, 0x90, 0xa9, 0xe7, 0x07, 0x58, 0x9f, 0x18, 0x8f, 0xec, 0x02, 0x75, 0xda,
	0xe4, 0xd6, 0xfe, 0xf4, 0x1f, 0x50, 0x26, 0xc3, 0x00, 0x56, 0x0b, 0x33, 0x8b, 0xbd, 0x9b, 0xe7,
	0x55, 0x4d, 0x52, 0xed, 0xbd, 0x19, 0x08, 0x13, 0xf5, 0x2d, 0xb4, 0x72, 0x13, 0x85, 0xbd, 0x93,
	0x67, 0x4c, 0xce, 0x38, 0xed, 0x87, 0x53, 0xd7, 0x4d, 0xbc, 0x33, 0xb8, 0x9b, 0x6d, 0x58, 0xdf,
	0x98, 0x9f, 0x9b, 0xe7, 0x94, 0x16, 0xb3, 0xb8, 0x8f, 0x66, 0x62, 0xc6, 0x0a, 0x14, 0x66, 0x87,
	0xa2, 0x02, 0x55, 0xa3, 0x4d, 0x51, 0x81, 0xea, 0xc1, 0xe3, 0x2d, 0xb4, 0x72, 0xc6, 0x5b, 0x54,
	0x60, 0x72, 0xc8, 0x28, 0x2a, 0x50, 0xe5, 0xd8, 0x0c, 0xb6, 0xab, 0x0d, 0xd0, 0xfe, 0xac, 0x8a,
	0x5a, 0xe9, 0xd8, 0xed, 0xa7, 0x75, 0xa0, 0x63, 0xc9, 0x4b, 0x5e, 0x50, 0x94, 0xbc, 0xda, 0x3c,
	0x8b, 0x92, 0x4f, 0x33, 0x93, 0x01, 0xac, 0x16, 0xee, 0x5f, 0x51, 0xf2, 0x2a, 0xeb, 0x28, 0x4a,
	0x5e, 0x79, 0x79, 0x5f, 0x2e, 0x9c, 0x35, 0xb8, 0xef, 0x2f, 0x25, 0x4e, 0x72, 0xf8, 0x77, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xf3, 0x2a, 0x0f, 0x19, 0xfe, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RuntimeProviderManagerClient is the client API for RuntimeProviderManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RuntimeProviderManagerClient interface {
	// cluster
	ParseClusterConf(ctx context.Context, in *ParseClusterConfRequest, opts ...grpc.CallOption) (*ParseClusterConfResponse, error)
	SplitJobIntoTasks(ctx context.Context, in *SplitJobIntoTasksRequest, opts ...grpc.CallOption) (*SplitJobIntoTasksResponse, error)
	HandleSubtask(ctx context.Context, in *HandleSubtaskRequest, opts ...grpc.CallOption) (*HandleSubtaskResponse, error)
	WaitSubtask(ctx context.Context, in *WaitSubtaskRequest, opts ...grpc.CallOption) (*WaitSubtaskResponse, error)
	DescribeSubnets(ctx context.Context, in *DescribeSubnetsRequest, opts ...grpc.CallOption) (*DescribeSubnetsResponse, error)
	CheckResource(ctx context.Context, in *CheckResourceRequest, opts ...grpc.CallOption) (*CheckResourceResponse, error)
	DescribeVpc(ctx context.Context, in *DescribeVpcRequest, opts ...grpc.CallOption) (*DescribeVpcResponse, error)
	DescribeClusterDetails(ctx context.Context, in *DescribeClusterDetailsRequest, opts ...grpc.CallOption) (*DescribeClusterDetailsResponse, error)
	// runtime
	ValidateRuntime(ctx context.Context, in *ValidateRuntimeRequest, opts ...grpc.CallOption) (*ValidateRuntimeResponse, error)
	DescribeZones(ctx context.Context, in *DescribeZonesRequest, opts ...grpc.CallOption) (*DescribeZonesResponse, error)
}

type runtimeProviderManagerClient struct {
	cc *grpc.ClientConn
}

func NewRuntimeProviderManagerClient(cc *grpc.ClientConn) RuntimeProviderManagerClient {
	return &runtimeProviderManagerClient{cc}
}

func (c *runtimeProviderManagerClient) ParseClusterConf(ctx context.Context, in *ParseClusterConfRequest, opts ...grpc.CallOption) (*ParseClusterConfResponse, error) {
	out := new(ParseClusterConfResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/ParseClusterConf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) SplitJobIntoTasks(ctx context.Context, in *SplitJobIntoTasksRequest, opts ...grpc.CallOption) (*SplitJobIntoTasksResponse, error) {
	out := new(SplitJobIntoTasksResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/SplitJobIntoTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) HandleSubtask(ctx context.Context, in *HandleSubtaskRequest, opts ...grpc.CallOption) (*HandleSubtaskResponse, error) {
	out := new(HandleSubtaskResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/HandleSubtask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) WaitSubtask(ctx context.Context, in *WaitSubtaskRequest, opts ...grpc.CallOption) (*WaitSubtaskResponse, error) {
	out := new(WaitSubtaskResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/WaitSubtask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) DescribeSubnets(ctx context.Context, in *DescribeSubnetsRequest, opts ...grpc.CallOption) (*DescribeSubnetsResponse, error) {
	out := new(DescribeSubnetsResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/DescribeSubnets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) CheckResource(ctx context.Context, in *CheckResourceRequest, opts ...grpc.CallOption) (*CheckResourceResponse, error) {
	out := new(CheckResourceResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/CheckResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) DescribeVpc(ctx context.Context, in *DescribeVpcRequest, opts ...grpc.CallOption) (*DescribeVpcResponse, error) {
	out := new(DescribeVpcResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/DescribeVpc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) DescribeClusterDetails(ctx context.Context, in *DescribeClusterDetailsRequest, opts ...grpc.CallOption) (*DescribeClusterDetailsResponse, error) {
	out := new(DescribeClusterDetailsResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/DescribeClusterDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) ValidateRuntime(ctx context.Context, in *ValidateRuntimeRequest, opts ...grpc.CallOption) (*ValidateRuntimeResponse, error) {
	out := new(ValidateRuntimeResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/ValidateRuntime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) DescribeZones(ctx context.Context, in *DescribeZonesRequest, opts ...grpc.CallOption) (*DescribeZonesResponse, error) {
	out := new(DescribeZonesResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/DescribeZones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RuntimeProviderManagerServer is the server API for RuntimeProviderManager service.
type RuntimeProviderManagerServer interface {
	// cluster
	ParseClusterConf(context.Context, *ParseClusterConfRequest) (*ParseClusterConfResponse, error)
	SplitJobIntoTasks(context.Context, *SplitJobIntoTasksRequest) (*SplitJobIntoTasksResponse, error)
	HandleSubtask(context.Context, *HandleSubtaskRequest) (*HandleSubtaskResponse, error)
	WaitSubtask(context.Context, *WaitSubtaskRequest) (*WaitSubtaskResponse, error)
	DescribeSubnets(context.Context, *DescribeSubnetsRequest) (*DescribeSubnetsResponse, error)
	CheckResource(context.Context, *CheckResourceRequest) (*CheckResourceResponse, error)
	DescribeVpc(context.Context, *DescribeVpcRequest) (*DescribeVpcResponse, error)
	DescribeClusterDetails(context.Context, *DescribeClusterDetailsRequest) (*DescribeClusterDetailsResponse, error)
	// runtime
	ValidateRuntime(context.Context, *ValidateRuntimeRequest) (*ValidateRuntimeResponse, error)
	DescribeZones(context.Context, *DescribeZonesRequest) (*DescribeZonesResponse, error)
}

func RegisterRuntimeProviderManagerServer(s *grpc.Server, srv RuntimeProviderManagerServer) {
	s.RegisterService(&_RuntimeProviderManager_serviceDesc, srv)
}

func _RuntimeProviderManager_ParseClusterConf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseClusterConfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).ParseClusterConf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/ParseClusterConf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).ParseClusterConf(ctx, req.(*ParseClusterConfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_SplitJobIntoTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SplitJobIntoTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).SplitJobIntoTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/SplitJobIntoTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).SplitJobIntoTasks(ctx, req.(*SplitJobIntoTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_HandleSubtask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleSubtaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).HandleSubtask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/HandleSubtask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).HandleSubtask(ctx, req.(*HandleSubtaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_WaitSubtask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WaitSubtaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).WaitSubtask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/WaitSubtask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).WaitSubtask(ctx, req.(*WaitSubtaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_DescribeSubnets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeSubnetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).DescribeSubnets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/DescribeSubnets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).DescribeSubnets(ctx, req.(*DescribeSubnetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_CheckResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).CheckResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/CheckResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).CheckResource(ctx, req.(*CheckResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_DescribeVpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeVpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).DescribeVpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/DescribeVpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).DescribeVpc(ctx, req.(*DescribeVpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_DescribeClusterDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeClusterDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).DescribeClusterDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/DescribeClusterDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).DescribeClusterDetails(ctx, req.(*DescribeClusterDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_ValidateRuntime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateRuntimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).ValidateRuntime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/ValidateRuntime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).ValidateRuntime(ctx, req.(*ValidateRuntimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_DescribeZones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeZonesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).DescribeZones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/DescribeZones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).DescribeZones(ctx, req.(*DescribeZonesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RuntimeProviderManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.RuntimeProviderManager",
	HandlerType: (*RuntimeProviderManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ParseClusterConf",
			Handler:    _RuntimeProviderManager_ParseClusterConf_Handler,
		},
		{
			MethodName: "SplitJobIntoTasks",
			Handler:    _RuntimeProviderManager_SplitJobIntoTasks_Handler,
		},
		{
			MethodName: "HandleSubtask",
			Handler:    _RuntimeProviderManager_HandleSubtask_Handler,
		},
		{
			MethodName: "WaitSubtask",
			Handler:    _RuntimeProviderManager_WaitSubtask_Handler,
		},
		{
			MethodName: "DescribeSubnets",
			Handler:    _RuntimeProviderManager_DescribeSubnets_Handler,
		},
		{
			MethodName: "CheckResource",
			Handler:    _RuntimeProviderManager_CheckResource_Handler,
		},
		{
			MethodName: "DescribeVpc",
			Handler:    _RuntimeProviderManager_DescribeVpc_Handler,
		},
		{
			MethodName: "DescribeClusterDetails",
			Handler:    _RuntimeProviderManager_DescribeClusterDetails_Handler,
		},
		{
			MethodName: "ValidateRuntime",
			Handler:    _RuntimeProviderManager_ValidateRuntime_Handler,
		},
		{
			MethodName: "DescribeZones",
			Handler:    _RuntimeProviderManager_DescribeZones_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "runtime_provider.proto",
}
